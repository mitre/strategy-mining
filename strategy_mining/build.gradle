plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

java {
    modularity.inferModulePath = true  // enable this preview feature
}

group = 'org.mitre'
description = 'strategy_mining'
version = '1.0-SNAPSHOT'
applicationName = 'strategy_mining'  // the name that's used for the build/distribution. This does not include the version number.

repositories {
    // TODO this is MITRE specific but useful for referencing Mason and ECJ, figure out how to remove
    // Then look in Artifactory
    maven {
        url = 'https://artifacts.mitre.org:443/artifactory/gradle-plugins'
    }
    maven {
        url = 'https://artifacts.mitre.org:443/artifactory/java-libs-release'
    }
    maven {
        url = 'https://artifacts.mitre.org:443/artifactory/java-libs-snapshot'
    }
    maven {
        url 'https://artifacts.mitre.org:443/artifactory/java-plugins-release'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }

    // Finally look outside
    maven {
        url = 'https://plugins.gradle.org/m2/'
    }
    // netlogo is special and has their own repository
    maven {
        url = 'https://dl.bintray.com/netlogo/NetLogo-JVM/'
    }

    // Look on Github for repositories
    maven { url 'https://jitpack.io' }
    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'edu.gmu.cs:mason:20'  // for Maven internally
//    implementation 'com.github.eclab:mason:20'  // for Github
    implementation 'edu.gmu.cs:ecj:27'
    implementation 'org:netlogo:6.1.1'
    implementation 'org.spiderland.psh:pshecj:1'  // This is a modified version of PSH to use with ECJ. Source at: https://github.com/jonklein/Psh
    implementation 'org.scala-lang:scala-library:2.12.8'
    implementation 'org.scala-lang.modules:scala-parser-combinators_2.12:1.0.5'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.mitre:emd:1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClassName = 'org.mitre.strategy_mining.StrategyMining'
}

build.dependsOn gradle.includedBuild('emd').task(':compileEMD')
